-- title:  Demo 2.5D Raycaster
-- author: tomas7777
-- desc:   My first pseudo-3D raycast engine
-- script: lua

--Thanks Lode Vandevenne for the tutorial
--https://lodev.org/cgtutor/raycasting.html

--TIC80 constants
--(screen dimensions and frametime)
SW,SH=240,136
DT=1/60
--Demo constants
FOV=90
VIEW_DIST=64
WALL_HEIGHT=136
TEX_SIZE=16
SKY_SIZE=32
TILES_TEX={
	[1]=261,
	[2]=259,
}
FLOOR_TEX=263
CEIL_TEX=265
SKY_TEX=267
DRAW_FLOOR=true
DRAW_CEIL=true
DRAW_SKY=false
I_LEAVE=2
ENTITY_DEF={
	[0]={
		--Player
		SPEED=6,
		RSPEED=120,
		HITBOX=44/64,
	},
	[1]={
		--Test decoration
		SPRITE=257
	}
}
MAP_DEF={
	[0]={
		X0=0,
		Y0=0,
		X1=63,
		Y1=63,
	}
}
DEFAULT_MAP=0
--Debug
NOCLIP=false
AVG_FPS=true

function Init()
	t=0
	plr={x=0,y=0,dirx=1,diry=0}
	cam={}
	cam.dirx=-plr.diry
	cam.diry=plr.dirx
	cam.length=math.tan(math.rad(FOV/2))
	zbuf={}
	for x=0,SW-1 do
		zbuf[x]=math.huge
	end
	entities={}
	LoadMap(DEFAULT_MAP)
end

function LoadMap(id)
	local def=MAP_DEF[id]
	for y=def.Y0,def.Y1 do
		for x=def.X0,def.X1 do
			local tile=mget(x,y)
			if tile==128 then
				plr.x=x+0.5
				plr.y=y+0.5
			elseif tile>128 then
				table.insert(entities,{
					type=tile-128,
					x=x+0.5,
					y=y+0.5,
				})
			end
		end
	end
end

function TIC()
	local i_time=time()
	ProcessInput()
	if I_LEAVE==1 then
		cls()
	else
		for y=0,SH-1 do
			for x=t%I_LEAVE,SW-1,I_LEAVE do
				poke4(x+y*240,0)
			end
		end
	end
	DrawFloorCeil()
	if DRAW_SKY then
		DrawSky()
	end
	DrawWalls()
	DrawEntities()
	DrawFPS(time()-i_time,AVG_FPS)
	t=t+1
end

function ProcessInput()
	if btn(0) then
		MoveForward(1)
	end
	if btn(1) then
		MoveForward(-1)
	end
	if btn(2) then
		RotateRight(-1)
	end
	if btn(3) then
		RotateRight(1)
	end
end

function MoveForward(Factor)
	local PLR_SPEED=ENTITY_DEF[0].SPEED
	local dx,dy=
	plr.dirx*PLR_SPEED*DT*Factor,
	plr.diry*PLR_SPEED*DT*Factor
	local goal_x,goal_y=
	plr.x+dx,plr.y+dy
	if not NOCLIP then
		--Collisions
		local move_x,move_y=
			ResolveCollisions(
			plr.x,plr.y,goal_x,goal_y)
		if not move_x then
			goal_x=plr.x
		end
		if not move_y then
			goal_y=plr.y
		end
	end
	plr.x,plr.y=goal_x,goal_y
end

function RotateRight(Factor)
	local PLR_RSPEED=ENTITY_DEF[0].RSPEED
	local ang=math.rad(PLR_RSPEED)*DT*Factor
	plr.dirx=
		plr.dirx*math.cos(ang)
		-plr.diry*math.sin(ang)
	plr.diry=
		plr.dirx*math.sin(ang)
		+plr.diry*math.cos(ang)
	--Normalize
	local l=Length(plr.dirx,plr.diry)
	plr.dirx=plr.dirx/l
	plr.diry=plr.diry/l
	--Rotate camera
	cam.dirx=-plr.diry
	cam.diry=plr.dirx
end

function IsSolid(id)
	return fget(id,0)
end

function ResolveCollisions(
ox,oy,goal_x,goal_y)
	--Simple "sliding" collision resolution:
	--Tests collisions on each axis separately,
	--moves if no collisions found, otherwise
	--doesn't move (on that axis).
	local PLR_HITBOX=ENTITY_DEF[0].HITBOX
	local function CanMove(pos_x,pos_y)
		local box_x0,box_y0,box_x1,box_y1=
		pos_x-PLR_HITBOX/2,
		pos_y-PLR_HITBOX/2,
		pos_x+PLR_HITBOX/2,
		pos_y+PLR_HITBOX/2
		local mapx0,mapy0,mapx1,mapy1=
		box_x0//1,
		box_y0//1,
		box_x1//1,
		box_y1//1
		--Overlapping map cells
		local cells={
			{mapx0,mapy0},
			{mapx1,mapy0},
			{mapx0,mapy1},
			{mapx1,mapy1}
		}
		for _,cell in ipairs(cells) do
			if IsSolid(mget(cell[1],cell[2])) then
				--Collided
				return false
			end
		end
		return true
	end
	return
	CanMove(goal_x,oy),
	CanMove(ox,goal_y)
end

function DrawFloorCeil()
	if not (DRAW_FLOOR or DRAW_CEIL) then
		return
	end
	--Directions of left/rightmost rays
	local dirx0,diry0,dirx1,diry1=
	plr.dirx-cam.dirx*cam.length,
	plr.diry-cam.diry*cam.length,
	plr.dirx+cam.dirx*cam.length,
	plr.diry+cam.diry*cam.length
	for y=DRAW_CEIL and 0 or SH/2,
	DRAW_FLOOR and SH-1 or SH/2 do
		local y_diff=math.abs(y-SH/2)
		if y_diff~=0 then
			local isFloor=y>SH/2
			local planeDistance=(SH/2)/y_diff
			--Where the rays intersect the floor/ceiling
			local planeX0,planeY0,planeX1,planeY1=
			plr.x+dirx0*planeDistance,
			plr.y+diry0*planeDistance,
			plr.x+dirx1*planeDistance,
			plr.y+diry1*planeDistance
			local stepX,stepY=
			(planeX1-planeX0)/(SW-1),
			(planeY1-planeY0)/(SW-1)
			local planeX,planeY=
			planeX0+stepX*(t%I_LEAVE),
			planeY0+stepY*(t%I_LEAVE)
			local tex=isFloor
			and FLOOR_TEX
			or CEIL_TEX
			for x=t%I_LEAVE,SW-1,I_LEAVE do
				planeX,planeY=
				planeX+stepX*I_LEAVE,
				planeY+stepY*I_LEAVE
				--Get texture coords
				local planeXi,planeYi=
				planeX%1,planeY%1
				local texX=(planeXi*TEX_SIZE)//1
				local texY=(planeYi*TEX_SIZE)//1
				--Fix texture mirroring
				if not isFloor then
					texX=TEX_SIZE-texX-1
				end
				--Draw
				local spr_offx=texX//8
				local spr_offy=texY//8
				local address_x=0x8000+tex*64
				+texX%8+spr_offx*64
				pix(x,y,peek4(
				address_x+(texY%8)*8
				+spr_offy*1024
				))
			end
		end
	end
end

function DrawSky()
	local scale=(SH/2-1)/SKY_SIZE
	local address_i=0x8000+SKY_TEX*64
	local step=1/scale
	local texXf=0
	local texX=texXf//1
	for x=0,SW-1 do
		local spr_offx=texX//8
		local address_x=
		address_i+texX%8+spr_offx*64
		local texYf=0
		local texY=0
		for y=0,SH/2-1 do
			local spr_offy=texY//8
			pix(x,y,peek4(
			address_x+(texY%8)*8
			+spr_offy*1024
			))
			texYf=(texYf+step)%SKY_SIZE
			texY=texYf//1
		end
		texXf=(texXf+step)%SKY_SIZE
		texX=texXf//1
	end
end

function DrawWalls()
	for x=t%I_LEAVE,SW-1,I_LEAVE do
		local length=(cam.length/(SW/2))*(x-SW/2)
		local dirx,diry=
		plr.dirx+(cam.dirx*length),
		plr.diry+(cam.diry*length)
		local hit_id,final_dist,hit_side,wallX=
		CastRay(plr.x,plr.y,dirx,diry)
		if hit_id~=0 and hit_id<=127 then
			zbuf[x]=final_dist
			local height=WALL_HEIGHT/final_dist
			local y0=SH/2-height/2
			local y1=SH/2+height/2
			--Screen y coords
			local sy0=math.max(0,y0)
			local sy1=math.min(y1,SH-1)
			local texX=(wallX*TEX_SIZE)//1
			--Fix texture mirroring on some faces
			if (hit_side==0 and dirx<0)
			or (hit_side==1 and diry>0) then
				texX=TEX_SIZE-texX-1
			end
			--Sprite id offset
			local spr_offx=texX//8
			--Sprite address excluding y coords
			local address_x=0x8000+TILES_TEX[hit_id]*64
			+texX%8+spr_offx*64
			--Store last texY and increase by
			--a step for every line, rather than
			--re-lerping. This allowed me to
			--squeeze an extra ~10% performance
			--on my dev machine.
			local texYf=
			TEX_SIZE*(sy0-y0)/(y1-y0)
			local texY=texYf//1
			local stepY=
			TEX_SIZE/(y1-y0)
			for y=sy0,sy1 do
				local spr_offy=texY//8
				pix(x,y,peek4(
				address_x+(texY%8)*8
				+spr_offy*1024
				))
				texYf=texYf+stepY
				texY=texYf//1
			end
		end
	end
end

function CastRay(ox,oy,dirx,diry)
	--Distance in ray between
	--x and y units
	local d_distx,d_disty
	if dirx==0 then
		--Vertical ray
		d_disty=1
	elseif diry==0 then
		--Horizontal ray
		d_distx=1
	else
		local slope=diry/dirx
		d_distx,d_disty=
		Length(1,slope),Length(1/slope,1)
	end
	--Player distance to next
	--x or y unit
	local distx,disty
	if dirx<0 then
		distx=plr.x%1
	else
		distx=1-plr.x%1
	end
	if diry<0 then
		disty=plr.y%1
	else
		disty=1-plr.y%1
	end
	distx=math.abs(distx)
	disty=math.abs(disty)
	--Distance in ray to next
	--x or y unit
	local sidex,sidey
	if d_distx then
		sidex=d_distx*distx
	end
	if d_disty then
		sidey=d_disty*disty
	end
	--Start casting
	local mapx,mapy=ox//1,oy//1
	local hit_id=0
	local hit_side=0 --0 for x, 1 for y
	local dist_count=0
	local stepx,stepy=
	Sign(dirx),Sign(diry)
	while dist_count<VIEW_DIST do
		if (not sidey)
		or (sidex and sidex<sidey) then
			--Closer to x unit
			mapx=mapx+stepx
			sidex=sidex+d_distx
			hit_side=0
		else
			--Closer to y unit
			mapy=mapy+stepy
			sidey=sidey+d_disty
			hit_side=1
		end
		local tile_id=mget(mapx,mapy)
		if tile_id>0 and tile_id<=127 then
			hit_id=tile_id
			break
		else
			dist_count=dist_count+1
		end
	end
	--Calculate distance
	local final_dist
	if hit_side==0 then
		final_dist=sidex-d_distx
	else
		final_dist=sidey-d_disty
	end
	--Fisheye correction
	local dirL=Length(dirx,diry)
	final_dist=final_dist/dirL
	--Used for texturing
	local wallX
	if hit_side==0 then
		wallX=oy+final_dist*diry
	else
		wallX=ox+final_dist*dirx
	end
	wallX=wallX%1
	return hit_id,final_dist,hit_side,wallX
end

function DrawEntities()
	local dists={}
	for _,ent in ipairs(entities) do
		
	end
	table.sort(dists)
end

function DrawDebugMap()
	map(0,0,16,16,0,0,0)
	spr(257,plr.x*8,plr.y*8)
end

function DrawFPS(frametime,avg)
	if avg then
		if not _avg_ftimes then
			_avg_ftimes={}
		end
		local a=_avg_ftimes
		table.insert(a,frametime)
		if #a>60 then
			table.remove(a,1)
		end
		local sum=0
		for i=1,#a do
			sum=sum+a[i]
		end
		frametime=sum/#a
	end
	local fps=1000/frametime
	print("FPS: "..
	(avg and math.floor(fps) or fps),0,0,12)
end

function Length(x,y)
	return math.sqrt(x^2+y^2)
end

function Sign(x)
	if x==0 then
		return 0
	else
		return x/math.abs(x)
	end
end

Init()
-- <TILES>
-- 001:dddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd
-- 002:9999999999999999999999999999999999999999999999999999999999999999
-- 128:022222202222c22222222c222cccccc222222c222222c2222222222202222220
-- 129:0aaaaaa0aaaaaaaaac0cc0caaccccccaaaaaaaaaaaaaaaaaaaaaaaaa0aaaaaa0
-- </TILES>

-- <SPRITES>
-- 001:eccccccccc888888caaaaaaaca888888cacccccccacc0ccccacc0ccccacc0ccc
-- 002:ccccceee8888cceeaaaa0cee888a0ceeccca0ccc0cca0c0c0cca0c0c0cca0c0c
-- 003:1111111122312222111111112223122222231222111111112222223111111111
-- 004:1111111131222223111111112222312322223123111111112222222311111111
-- 005:8888808888880098888800880000008888808088888080888880008980808088
-- 006:0088888088080880880808008808000080000888888088889880888888008888
-- 007:feeeeeeefeefefeefeeeefeefeeeefefffefeffffeeeefeffeeeeeeefeeeefee
-- 008:efeeeeeefeeeefeefeeeffeeffeeefeefefeefefeeeffffeefeffffffefeffff
-- 009:0000080000000800000008000000080000000800888888880000080000000800
-- 010:0008000000080000000800000008000000080000888888880008000000080000
-- 013:00000000000000000000000000000000000000000000000b0000000000000000
-- 017:cacccccccaaaaaaacaaacaaacaaaaccccaaaaaaac8888888cc000cccecccccec
-- 018:ccca00ccaaaa0ccecaaa0ceeaaaa0ceeaaaa0cee8888ccee000cceeecccceeee
-- 019:2231222222312222111111112222222311111111222312222223122211111111
-- 020:2312222323122223111111111222222311111111222312232223122311111111
-- 021:8800808888008088888080898880809888808088888080888800008888888088
-- 022:8000888888808088888088808800000088008880888088800000888008888888
-- 023:ffeeefeefeeefeeffeefeeeffeeeeeeffeefeeefffefefefffefeeeeffeeefee
-- 024:ffeffffeffeeffeefeeeffeffeeefeefffeefeefffeffeeffffeeeefeeefeeff
-- 025:0000080000000800000008008888888800000800000008000000080000000800
-- 026:0008000000080000000800008888888800080000000800000008000000080000
-- 028:000000000000000000000000000000000000c000000000000000000000000000
-- 045:0000000000000000000000000000000000000000000000000000000000b00000
-- 046:000c000000000000000000000000000000000000000000000000000000000000
-- 059:0000000000000000000000c00000000000000000000000000000000000000000
-- </SPRITES>

-- <MAP>
-- 000:101010101010101010101010101010101010101010101010101010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 001:100000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 002:100000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 003:100000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 004:100000000000000000000000000000100000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 005:100000000010101010101000000000100000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 006:100000000010000000000000000000100000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 007:100000000010000000000000000000100000200000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 008:100000000010000008001000000000100000200000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 009:100000000010000000001000000000100000200000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 010:100000000010101010101000000000100000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 011:100000000000000000000000000000100000000000000000202020000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 012:100000000000000000000000000000100000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 013:100000000000000000000000000000100000200000100000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 014:100000000000000000000000000000100000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 015:101010101010000000001010101010101010101010101010101010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 016:100000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 017:100000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 018:100000180000000000000000180000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 019:100000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 020:100000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 021:101010101010101010101010101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- </MAP>

-- <WAVES>
-- 000:00000000ffffffff00000000ffffffff
-- 001:0123456789abcdeffedcba9876543210
-- 002:0123456789abcdef0123456789abcdef
-- </WAVES>

-- <SFX>
-- 000:000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000304000000000
-- </SFX>

-- <FLAGS>

-- </FLAGS>

-- <PALETTE>
-- 000:1a1c2c5d275db13e53ef7d57ffcd75a7f07038b76425717929366f3b5dc941a6f673eff7f4f4f494b0c2566c86333c57
-- </PALETTE>

